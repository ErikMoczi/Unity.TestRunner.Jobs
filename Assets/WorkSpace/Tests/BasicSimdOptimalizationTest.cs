using TestCase.Basic.Addition.Simd.Optimalization;
using TestCase.Basic.Division.Simd.Optimalization;
using TestCase.Basic.Multiplication.Simd.Optimalization;
using TestCase.Basic.Subtraction.Simd.Optimalization;
using TestRunner;
using TestRunner.Generator;
using TestRunner.Generator.Interfaces;
using TestRunner.Wrappers.Base;
using TestRunner.Wrappers.Base.Config;
using Unity.Collections;
using Unity.Mathematics;
using WorkSpace.Tests.Base;

namespace WorkSpace.Tests
{
    public class BasicSimdOptimalizationTest : SampleGenerator
    {
        private const string TestName = nameof(BasicSimdOptimalizationTest);

        public override ISampleConfig[] InitSampleConfigs()
        {
            return new ISampleConfig[]
            {
                new SampleConfig(typeof(int2), DataConfig.DataInt2),
                new SampleConfig(typeof(int3), DataConfig.DataInt3),
                new SampleConfig(typeof(int4), DataConfig.DataInt4),
                new SampleConfig(typeof(float2), DataConfig.DataFloat2),
                new SampleConfig(typeof(float3), DataConfig.DataFloat3),
                new SampleConfig(typeof(float4), DataConfig.DataFloat4),
                new SampleConfig(typeof(uint2), DataConfig.DataUInt2),
                new SampleConfig(typeof(uint3), DataConfig.DataUInt3),
                new SampleConfig(typeof(uint4), DataConfig.DataUInt4),
            };
        }

        public override IWorkWrapper[] InitWorkWrappers(IInputDataContainer inputDataContainer, int dataSize)
        {
            return new[]
            {
                #region Addition

                WorkerTests<int2, int2, int2>.RunIJob(TestName, new SimdAdditionOptimalizationInt2Job(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int2, int2, int2>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationInt2JobParallelFor(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int3, int3, int3>.RunIJob(TestName, new SimdAdditionOptimalizationInt3Job(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int3, int3, int3>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationInt3JobParallelFor(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int4, int4, int4>.RunIJob(TestName, new SimdAdditionOptimalizationInt4Job(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int4, int4, int4>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationInt4JobParallelFor(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint2, uint2, uint2>.RunIJob(TestName, new SimdAdditionOptimalizationUInt2Job(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint2, uint2, uint2>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationUInt2JobParallelFor(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint3, uint3, uint3>.RunIJob(TestName, new SimdAdditionOptimalizationUInt3Job(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint3, uint3, uint3>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationUInt3JobParallelFor(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint4, uint4, uint4>.RunIJob(TestName, new SimdAdditionOptimalizationUInt4Job(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint4, uint4, uint4>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationUInt4JobParallelFor(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float2, float2, float2>.RunIJob(TestName, new SimdAdditionOptimalizationFloat2Job(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float2, float2, float2>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationFloat2JobParallelFor(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float3, float3, float3>.RunIJob(TestName, new SimdAdditionOptimalizationFloat3Job(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float3, float3, float3>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationFloat3JobParallelFor(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float4, float4, float4>.RunIJob(TestName, new SimdAdditionOptimalizationFloat4Job(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float4, float4, float4>.RunIJobParallelFor(TestName,
                    new SimdAdditionOptimalizationFloat4JobParallelFor(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                #endregion

                #region Division

                WorkerTests<int2, int2, int2>.RunIJob(TestName, new SimdDivisionOptimalizationInt2Job(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int2, int2, int2>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationInt2JobParallelFor(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int3, int3, int3>.RunIJob(TestName, new SimdDivisionOptimalizationInt3Job(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int3, int3, int3>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationInt3JobParallelFor(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int4, int4, int4>.RunIJob(TestName, new SimdDivisionOptimalizationInt4Job(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int4, int4, int4>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationInt4JobParallelFor(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint2, uint2, uint2>.RunIJob(TestName, new SimdDivisionOptimalizationUInt2Job(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint2, uint2, uint2>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationUInt2JobParallelFor(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint3, uint3, uint3>.RunIJob(TestName, new SimdDivisionOptimalizationUInt3Job(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint3, uint3, uint3>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationUInt3JobParallelFor(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint4, uint4, uint4>.RunIJob(TestName, new SimdDivisionOptimalizationUInt4Job(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint4, uint4, uint4>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationUInt4JobParallelFor(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float2, float2, float2>.RunIJob(TestName, new SimdDivisionOptimalizationFloat2Job(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float2, float2, float2>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationFloat2JobParallelFor(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float3, float3, float3>.RunIJob(TestName, new SimdDivisionOptimalizationFloat3Job(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float3, float3, float3>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationFloat3JobParallelFor(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float4, float4, float4>.RunIJob(TestName, new SimdDivisionOptimalizationFloat4Job(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float4, float4, float4>.RunIJobParallelFor(TestName,
                    new SimdDivisionOptimalizationFloat4JobParallelFor(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                #endregion

                #region Multiplication

                WorkerTests<int2, int2, int2>.RunIJob(TestName, new SimdMultiplicationOptimalizationInt2Job(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int2, int2, int2>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationInt2JobParallelFor(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int3, int3, int3>.RunIJob(TestName, new SimdMultiplicationOptimalizationInt3Job(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int3, int3, int3>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationInt3JobParallelFor(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int4, int4, int4>.RunIJob(TestName, new SimdMultiplicationOptimalizationInt4Job(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int4, int4, int4>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationInt4JobParallelFor(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint2, uint2, uint2>.RunIJob(TestName, new SimdMultiplicationOptimalizationUInt2Job(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint2, uint2, uint2>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationUInt2JobParallelFor(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint3, uint3, uint3>.RunIJob(TestName, new SimdMultiplicationOptimalizationUInt3Job(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint3, uint3, uint3>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationUInt3JobParallelFor(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint4, uint4, uint4>.RunIJob(TestName, new SimdMultiplicationOptimalizationUInt4Job(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint4, uint4, uint4>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationUInt4JobParallelFor(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float2, float2, float2>.RunIJob(TestName, new SimdMultiplicationOptimalizationFloat2Job(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float2, float2, float2>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationFloat2JobParallelFor(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float3, float3, float3>.RunIJob(TestName, new SimdMultiplicationOptimalizationFloat3Job(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float3, float3, float3>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationFloat3JobParallelFor(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float4, float4, float4>.RunIJob(TestName, new SimdMultiplicationOptimalizationFloat4Job(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float4, float4, float4>.RunIJobParallelFor(TestName,
                    new SimdMultiplicationOptimalizationFloat4JobParallelFor(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                #endregion

                #region Subtraction

                WorkerTests<int2, int2, int2>.RunIJob(TestName, new SimdSubtractionOptimalizationInt2Job(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int2, int2, int2>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationInt2JobParallelFor(),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    inputDataContainer.GetData<int2>(DataConfig.DataInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int3, int3, int3>.RunIJob(TestName, new SimdSubtractionOptimalizationInt3Job(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int3, int3, int3>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationInt3JobParallelFor(),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    inputDataContainer.GetData<int3>(DataConfig.DataInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<int4, int4, int4>.RunIJob(TestName, new SimdSubtractionOptimalizationInt4Job(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<int4, int4, int4>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationInt4JobParallelFor(),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    inputDataContainer.GetData<int4>(DataConfig.DataInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint2, uint2, uint2>.RunIJob(TestName, new SimdSubtractionOptimalizationUInt2Job(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint2, uint2, uint2>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationUInt2JobParallelFor(),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    inputDataContainer.GetData<uint2>(DataConfig.DataUInt2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint3, uint3, uint3>.RunIJob(TestName, new SimdSubtractionOptimalizationUInt3Job(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint3, uint3, uint3>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationUInt3JobParallelFor(),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    inputDataContainer.GetData<uint3>(DataConfig.DataUInt3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<uint4, uint4, uint4>.RunIJob(TestName, new SimdSubtractionOptimalizationUInt4Job(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<uint4, uint4, uint4>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationUInt4JobParallelFor(),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    inputDataContainer.GetData<uint4>(DataConfig.DataUInt4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float2, float2, float2>.RunIJob(TestName, new SimdSubtractionOptimalizationFloat2Job(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float2, float2, float2>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationFloat2JobParallelFor(),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    inputDataContainer.GetData<float2>(DataConfig.DataFloat2),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float3, float3, float3>.RunIJob(TestName, new SimdSubtractionOptimalizationFloat3Job(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float3, float3, float3>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationFloat3JobParallelFor(),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    inputDataContainer.GetData<float3>(DataConfig.DataFloat3),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                WorkerTests<float4, float4, float4>.RunIJob(TestName, new SimdSubtractionOptimalizationFloat4Job(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJob(Allocator.Persistent, true)),
                WorkerTests<float4, float4, float4>.RunIJobParallelFor(TestName,
                    new SimdSubtractionOptimalizationFloat4JobParallelFor(),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    inputDataContainer.GetData<float4>(DataConfig.DataFloat4),
                    new WorkConfigIJobParallelFor(Allocator.Persistent, true)),

                #endregion
            };
        }
    }
}